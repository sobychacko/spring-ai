<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.ai</groupId>
		<artifactId>spring-ai</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>spring-ai-spring-boot-autoconfigure</artifactId>
	<packaging>jar</packaging>
	<name>Spring AI Auto Configuration</name>
	<description>Spring AI Auto Configuration</description>
	<url>https://github.com/spring-projects/spring-ai</url>

	<scm>
		<url>https://github.com/spring-projects/spring-ai</url>
		<connection>git://github.com/spring-projects/spring-ai.git</connection>
		<developerConnection>git@github.com:spring-projects/spring-ai.git</developerConnection>
	</scm>

	<dependencies>

		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>${protobuf-java.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- production dependencies -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-otel</artifactId>
			<optional>true</optional>
		</dependency>


		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-mcp</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>io.modelcontextprotocol.sdk</groupId>
			<artifactId>mcp-spring-webflux</artifactId>
			<version>${mcp.sdk.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>io.modelcontextprotocol.sdk</groupId>
			<artifactId>mcp-spring-webmvc</artifactId>
			<version>${mcp.sdk.version}</version>
			<optional>true</optional>
		</dependency>

		
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-openai</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-postgresml</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-azure-openai</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-oci-genai</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-huggingface</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-ollama</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Transformers Embedding Model -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-transformers</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Because of Pinecone compatability issues downgrade
		netty-codec-http2 from 4.1.101.Final to 4.1.100.Final -->
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec-http2</artifactId>
			<version>4.1.100.Final</version>
			<optional>true</optional>
		</dependency>

		<!-- Apache Cassandra Vector Store -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-cassandra-store</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Azure Vector Store -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-azure-store</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Vertex AI Embedding -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-vertex-ai-embedding</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Vertex AI Gemini -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-vertex-ai-gemini</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Stability AI LLM -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-stability-ai</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- WatsonX AI  -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-watsonx-ai</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Bedrock -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-bedrock</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Bedrock  Converse -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-bedrock-converse</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Mistral AI LLM -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-mistral-ai</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-anthropic</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-minimax</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-zhipuai</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Moonshot AI  -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-moonshot</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-qianfan</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>apache-client</artifactId>
			<version>${awssdk.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- Azure Cosmos DB vector store -->
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-azure-cosmos-db-store</artifactId>
			<version>${project.parent.version}</version>
			<optional>true</optional>
		</dependency>

		<!-- test dependencies -->

		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-test</artifactId>
			<version>${project.parent.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.oracle.oci.sdk</groupId>
			<artifactId>oci-java-sdk-common</artifactId>
			<version>${oci-sdk-version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>ollama</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.redis</groupId>
			<artifactId>testcontainers-redis</artifactId>
			<version>2.2.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>localstack</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.skyscreamer</groupId>
			<artifactId>jsonassert</artifactId>
			<version>1.5.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-observation-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>cassandra</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

</project>
